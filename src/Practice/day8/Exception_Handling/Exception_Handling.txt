Exception Handling
    Exception Handling is one of the powerful mechanism in java to handle run-time error so
    the normal flow of program can be maintained.

What is Exception ?
    In java Exception is an event that disturbs the normal flow of the program.


Hierarchy of Java Exception classes
    The java.lang.Throwable class is the root class of Java Exception hierarchy which
    is inherited by two subclasses: Exception and Error. A hierarchy of Java Exception classes.


                                                    Throwable

            Exception                                                                 Error

                    IO Exception                                                       Stack overflow
                    SQL Exception                                                      Virtual machine
                    Class Not found                                                    Out of memory
                    Run-time Exception
                                |
                                v
                            Arithmetic Exception
                            Null pointer Exception
                            Number format Exception
                            Index Out OF bound Exception
                                            |
                                            v
                                    Array out of bound Exception
                                    String Out of bound




Error vs Exception

Error: An Error indicates serious problem that a reasonable application should not try to catch.
Exception: Exception indicates conditions that a reasonable application might try to catch.


                                     Error vs Exception

Classified as an unchecked type             |           Classified as checked and unchecked
                                            |
It belongs to java.lang.error               |           It belongs to java.lang.Exception
                                            |
It is irrecoverable                         |           It is recoverable
                                            |
It can't be occur at compile                |           It can occur at run time compile time both
                                            |
OutOfMemoryError ,IOError                   |           NullPointerException , SqlException
                                            |

Types of Java Exceptions
    There are mainly two types of exceptions: checked and unchecked. Here,
    an error is considered as the unchecked exception. According to Oracle,
    there are three types of exceptions:

Checked Exception
Unchecked Exception
Error


1) Checked Exception
The classes which directly inherit Throwable class except RuntimeException and
Error are known as checked exceptions e.g. IOException, SQLException etc.
Checked exceptions are checked at compile-time.

2) Unchecked Exception
The classes which inherit RuntimeException are known as unchecked exceptions
e.g. ArithmeticException, NullPointerException,


Keywords

Try
        The "try" keyword is used to specify a block where we should place exception code.
        The try block must be followed by either catch or finally. It means, we can't use try block alone.

catch
        The "catch" block is used to handle the exception. It must be preceded by try block
         which means we can't use catch block alone. It can be followed by finally block later.

finally
	    The "finally" block is used to execute the important code of the program. It is
	    executed whether an exception is handled or not.

throw
        The "throw" keyword is used to throw an exception.

throws
        The "throws" keyword is used to declare exceptions. It doesn't throw an exception.
        It specifies that there may occur an exception in the method. It is always used with method signature.

->  Example 1

Java catch multiple exceptions
    A try block can be followed by one or more catch blocks. Each catch block must contain a different exception handler.
    So, if you have to perform different tasks at the occurrence of different exceptions, use java multi-catch block.


Points to remember
    At a time only one exception occurs and at a time only one catch block is executed.
    All catch blocks must be ordered from most specific to most general, i.e. catch for
    ArithmeticException must come before catch for Exception.

--> Example2


Java Nested try block
    The try block within a try block is known as nested try block in java.

Why use nested try block
    Sometimes a situation may arise where a part of a block may cause one
    error and the entire block itself may cause another error. In such cases,
    exception handlers have to be nested.

--> Example3

